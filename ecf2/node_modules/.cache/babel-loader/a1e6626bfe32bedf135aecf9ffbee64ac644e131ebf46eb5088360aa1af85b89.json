{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhima\\\\Desktop\\\\FSD-Sem4-Project 2\\\\ecf2\\\\src\\\\components\\\\TreeCounter.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './TreeCounter.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TreeCounter() {\n  _s();\n  const finalCount = 245136420;\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    let animationFrameId;\n    const step = () => {\n      if (count < finalCount) {\n        setCount(prevCount => prevCount + 10000); // You can adjust the step size here\n        animationFrameId = requestAnimationFrame(step);\n      }\n    };\n    step(); // Start the counting animation\n    return () => cancelAnimationFrame(animationFrameId); // Cleanup\n  }, [count, finalCount]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tree-counter-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"tree-counter-count\",\n      children: count.toLocaleString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"tree-counter-label\",\n      children: \"Trees Planted\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(TreeCounter, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n_c = TreeCounter;\nexport default TreeCounter;\nvar _c;\n$RefreshReg$(_c, \"TreeCounter\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","TreeCounter","_s","finalCount","count","setCount","animationFrameId","step","prevCount","requestAnimationFrame","cancelAnimationFrame","className","children","toLocaleString","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/bhima/Desktop/FSD-Sem4-Project 2/ecf2/src/components/TreeCounter.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './TreeCounter.css'; // Import the CSS file\r\n\r\nfunction TreeCounter() {\r\n  const finalCount = 245136420;\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let animationFrameId;\r\n    const step = () => {\r\n      if (count < finalCount) {\r\n        setCount((prevCount) => prevCount + 10000); // You can adjust the step size here\r\n        animationFrameId = requestAnimationFrame(step);\r\n      }\r\n    };\r\n    step(); // Start the counting animation\r\n    return () => cancelAnimationFrame(animationFrameId); // Cleanup\r\n  }, [count, finalCount]);\r\n\r\n  return (\r\n    <div className=\"tree-counter-container\">\r\n      <span className=\"tree-counter-count\">{count.toLocaleString()}</span>\r\n      <span className=\"tree-counter-label\">Trees Planted</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TreeCounter;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAMC,UAAU,GAAG,SAAS;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAErCD,SAAS,CAAC,MAAM;IACd,IAAIS,gBAAgB;IACpB,MAAMC,IAAI,GAAGA,CAAA,KAAM;MACjB,IAAIH,KAAK,GAAGD,UAAU,EAAE;QACtBE,QAAQ,CAAEG,SAAS,IAAKA,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC;QAC5CF,gBAAgB,GAAGG,qBAAqB,CAACF,IAAI,CAAC;MAChD;IACF,CAAC;IACDA,IAAI,CAAC,CAAC,CAAC,CAAC;IACR,OAAO,MAAMG,oBAAoB,CAACJ,gBAAgB,CAAC,CAAC,CAAC;EACvD,CAAC,EAAE,CAACF,KAAK,EAAED,UAAU,CAAC,CAAC;EAEvB,oBACEH,OAAA;IAAKW,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrCZ,OAAA;MAAMW,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAAER,KAAK,CAACS,cAAc,CAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACpEjB,OAAA;MAAMW,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV;AAACf,EAAA,CAtBQD,WAAW;AAAAiB,EAAA,GAAXjB,WAAW;AAwBpB,eAAeA,WAAW;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}