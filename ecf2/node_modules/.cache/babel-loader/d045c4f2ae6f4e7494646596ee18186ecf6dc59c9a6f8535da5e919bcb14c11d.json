{"ast":null,"code":"var _jsxFileName = \"D:\\\\All Projects\\\\CrowdFundingWebsite\\\\ecf2\\\\src\\\\components\\\\TreeCounter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './TreeCounter.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TreeCounter() {\n  _s();\n  const [count, setCount] = useState(24835961); // Dummy initial count\n  const finalCount = 245136420; // Final goal\n\n  useEffect(() => {\n    // Simulate count updates every 30 seconds\n    const intervalId = setInterval(() => {\n      setCount(prevCount => {\n        // Randomly increase the count by a small amount\n        const increase = Math.floor(Math.random() * 1000);\n        return Math.min(prevCount + increase, finalCount);\n      });\n    }, 30000);\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tree-counter-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree-counter-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree-counter-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tree-counter-count\",\n          children: count.toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tree-counter-label\",\n          children: \"Trees Planted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tree-counter-progress\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tree-counter-progress-bar\",\n            style: {\n              width: `${count / finalCount * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tree-counter-goal\",\n          children: [\"Goal: \", finalCount.toLocaleString(), \" trees\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(TreeCounter, \"zvOBdglBeQ7q2jv5sjCdVw92uzc=\");\n_c = TreeCounter;\nexport default TreeCounter;\nvar _c;\n$RefreshReg$(_c, \"TreeCounter\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TreeCounter","_s","count","setCount","finalCount","intervalId","setInterval","prevCount","increase","Math","floor","random","min","clearInterval","className","children","toLocaleString","fileName","_jsxFileName","lineNumber","columnNumber","style","width","_c","$RefreshReg$"],"sources":["D:/All Projects/CrowdFundingWebsite/ecf2/src/components/TreeCounter.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './TreeCounter.css';\r\n\r\nfunction TreeCounter() {\r\n  const [count, setCount] = useState(24835961); // Dummy initial count\r\n  const finalCount = 245136420; // Final goal\r\n\r\n  useEffect(() => {\r\n    // Simulate count updates every 30 seconds\r\n    const intervalId = setInterval(() => {\r\n      setCount(prevCount => {\r\n        // Randomly increase the count by a small amount\r\n        const increase = Math.floor(Math.random() * 1000);\r\n        return Math.min(prevCount + increase, finalCount);\r\n      });\r\n    }, 30000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"tree-counter-section\">\r\n      <div className=\"tree-counter-container\">\r\n        <div className=\"tree-counter-content\">\r\n          <span className=\"tree-counter-count\">\r\n            {count.toLocaleString()}\r\n          </span>\r\n          <span className=\"tree-counter-label\">Trees Planted</span>\r\n          <div className=\"tree-counter-progress\">\r\n            <div \r\n              className=\"tree-counter-progress-bar\"\r\n              style={{ width: `${(count / finalCount) * 100}%` }}\r\n            />\r\n          </div>\r\n          <span className=\"tree-counter-goal\">\r\n            Goal: {finalCount.toLocaleString()} trees\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TreeCounter;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;EAC9C,MAAMQ,UAAU,GAAG,SAAS,CAAC,CAAC;;EAE9BP,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnCH,QAAQ,CAACI,SAAS,IAAI;QACpB;QACA,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC;QACjD,OAAOF,IAAI,CAACG,GAAG,CAACL,SAAS,GAAGC,QAAQ,EAAEJ,UAAU,CAAC;MACnD,CAAC,CAAC;IACJ,CAAC,EAAE,KAAK,CAAC;IAET,OAAO,MAAMS,aAAa,CAACR,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAKe,SAAS,EAAC,sBAAsB;IAAAC,QAAA,eACnChB,OAAA;MAAKe,SAAS,EAAC,wBAAwB;MAAAC,QAAA,eACrChB,OAAA;QAAKe,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACnChB,OAAA;UAAMe,SAAS,EAAC,oBAAoB;UAAAC,QAAA,EACjCb,KAAK,CAACc,cAAc,CAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,eACPrB,OAAA;UAAMe,SAAS,EAAC,oBAAoB;UAAAC,QAAA,EAAC;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACzDrB,OAAA;UAAKe,SAAS,EAAC,uBAAuB;UAAAC,QAAA,eACpChB,OAAA;YACEe,SAAS,EAAC,2BAA2B;YACrCO,KAAK,EAAE;cAAEC,KAAK,EAAG,GAAGpB,KAAK,GAAGE,UAAU,GAAI,GAAI;YAAG;UAAE;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNrB,OAAA;UAAMe,SAAS,EAAC,mBAAmB;UAAAC,QAAA,GAAC,QAC5B,EAACX,UAAU,CAACY,cAAc,CAAC,CAAC,EAAC,QACrC;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnB,EAAA,CAtCQD,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AAwCpB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}